import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FilenameFilter;
import java.io.SequenceInputStream;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
import org.apache.commons.io.IOUtils;

public class Main {

  //process files generated by
  //tar -cf - test*.data | split -b 10000 - test.tar.

  public static void main(String[] args) {
    try {
      String rootDir = args[0];
      FilenameFilter filter = new FilenameFilter() {
        public boolean accept(File dir, String name) {
          return name.contains(".tar.");
        }
      };


      File[] tarParts = new File(rootDir).listFiles(filter);
      Arrays.sort(tarParts);
      List<FileInputStream> tarPartStreams = new LinkedList<>();
      for (File tarPart : tarParts) {
        tarPartStreams.add(new FileInputStream(tarPart));
      }

      SequenceInputStream sis = new SequenceInputStream(Collections.enumeration(tarPartStreams));
      TarArchiveInputStream tarStream = new TarArchiveInputStream(sis);

      TarArchiveEntry entry;
      while ((entry = tarStream.getNextTarEntry()) != null) {
        if (entry.isDirectory()) {
          continue;
        }
        File curfile = new File(entry.getName());
        File parent = curfile.getParentFile();
        if (parent != null && !parent.exists()) {
          parent.mkdirs();
        }
        IOUtils.copy(tarStream, new FileOutputStream(curfile));
      }
      tarStream.close();
      sis.close();
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

}
